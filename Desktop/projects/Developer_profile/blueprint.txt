{
	"id": "gcnit",
	"avatar_url": "https://avatars.githubusercontent.com/u/4833751?v=4",
	"name": "Gaurav Chandak",
	"company": "workat.tech",
	"blog": "https://workat.tech",
	"location": "Bangalore, India",
	"email": null,
	"bio": "Building workat.tech;\r\nPreviously Software Engineer at @Flipkart, @microsoft and @tracxn",
	"github_id": "gcnit",
	"linkedin_id": "gcnit",
	"codechef_id": "gc_nit",
	"hackerrank_id": "gcnit",
	"twitter_id": "gc_nit",
	"medium_id": "gc_nit",
	"repos": [{
		"name": "awesome-learn-to-code",
		"html_url": "https://github.com/gcnit/awesome-learn-to-code",
		"description": "A list of awesome resources for learning to code",
		"updated_at": "2020-08-12T18:21:53Z"
	}]
}




 //  axios.get(`https://api.github.com/users/${ids}`).then(response =>   user_body = response.data);



router.delete('/:id', (req, res)=>{
      
});


router.post('/',(req, res)=>{
  
    const github_id = req.body.github_id;
    const linkedin_id = req.body.linkeddin_id;
   const  codechef_id = req.body.codechef_id;
    const hackerrank_id = req.body.hackerrank_id;
    const twitter_id = req.body.twitter_id;
    const medium_id = req.body.medium_id;

    let id;
    let avatar_url;
    let name ;
    let company;
    let blog ;
    let location ;
    let email;
    let bio;
    let repos = {};
    let reposList =[];

   const github = axios(`https://api.github.com/users/${github_id}`);
   const github_repos = axios(`https://api.github.com/users/${github_id}/repos`);
   
   console.log(github);

   Promise.all([github, github_repos]).then((resposes)=>{
     
         id = responses[0].data.login;
         avatar_url = responses[0].data.avatar_url;
         name = responses[0].data.name;
         company = responses[0].data.company;
         blog = responses[0].data.blog;
         location = responses[0].data.location;
         email = responses[0].data.email;
         bio = responses[0].data.bio;
         
         
         for(let i=0; i<responses[1].data.length ; i++){
            repos = {
               name : responses[1].data[i].name,
              html_url : responses[1].data[i].html_url,
              description : responses[1].data[i].description,
              updated_at : responses[1].data[i].updated_at
            }
            reposList.push(repos);
         }
        
         
    developers[id] = {
      id,
     avatar_url, 
     name, 
     company, 
     blog, 
     location,
    email,
    bio,
    github_id,
    linkedin_id,
    codechef_id,
    twitter_id,
    medium_id,
    reposList
    }

  res.status(201).send({id});
   
   }).catch(()=>{
      res.status(404).send({
         error : 'Github userName is invalid'});
   });

   });





const users={};

module.exports ={
    user